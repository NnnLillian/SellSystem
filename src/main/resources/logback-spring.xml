<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <!--配置控制台的输出表示该配置项需要用到ConsoleAppender这个类去处理-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <!--layout作为展示的配置-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--放置具体格式-->
            <pattern>
                %d - %msg%n
            </pattern>
        </layout>
    </appender>

    <!--配置文件的输出，因为对日志是每天输出一个文件，所以是一种滚动输出-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--过滤，因为ERROR级别比INFO高，所以想只输出INFO的日志，就必须把ERROR过滤掉-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <!--如果匹配是ERROR 则禁止掉这条log-->
            <onMatch>DENY</onMatch>
            <!--如果不是ERROR，我们就使用这条log-->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>
                %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>/var/log/tomcat/sell/info.%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>
                %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>/var/log/tomcat/sell/error.%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>

    <!--root下表明整个项目都适用-->
    <root level="info">
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
    </root>
</configuration>